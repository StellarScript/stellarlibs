import { NestFactory } from '@nestjs/core';
import { ExpressAdapter } from '@nestjs/platform-express';
import serverlessExpress from '@vendia/serverless-express';
import { Handler } from 'aws-lambda';
import express from 'express';
import { AppModule } from './app/app.module';

type ServerResponse = {
   statusCode: number;
   body: string;
};

let cachedServer: Handler;

async function bootstrap() {
   if (!cachedServer) {
      const expressApp = express();
      const nestApp = await NestFactory.create(AppModule, new ExpressAdapter(expressApp));
      nestApp.setGlobalPrefix('api');

      nestApp.enableCors();
      await nestApp.init();
      cachedServer = serverlessExpress({ app: expressApp });
   }
   return cachedServer;
}

export const handler: Handler = async (event, context, callback) => {
   const server = await bootstrap();
   const response = (await server(event, context, callback)) as ServerResponse;

   return {
      status: response.statusCode,
      body: response.body,
      headers: {
         'Content-Type': 'application/json',
      },
   };
};
