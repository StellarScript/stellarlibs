import type { Serverless } from 'serverless/aws';

export const envName = process.env.NODE_ENV;
const envFile = process.env.NODE_ENV ? `.${process.env.NODE_ENV}` : '';
export const { env } = require(`./environment${envFile}.ts`);

export const baseServerlessConfigProvider: Serverless['provider'] = {
   name: 'aws',
   runtime: 'nodejs18.x',
   memorySize: 128,
   profile: env.profile,
   stage: env.name,
   environment: {
      NODE_ENV: envName,
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1',
   },
   region: env.region,
};

export const baseServerlessConfig: Partial<Serverless> = {
   frameworkVersion: '3',
   service: 'base',
   package: {
      individually: true,
      excludeDevDependencies: true,
   },
   plugins: ['serverless-esbuild', 'serverless-offline'],
   custom: {
      esbuild: {
         bundle: true,
         minify: env.name !== 'dev',
         target: ["ES6"],
         sourcemap: env.name !== 'dev',
         sourcesContent: false,
         define: { 'require.resolve': undefined },
      },
   },
};
